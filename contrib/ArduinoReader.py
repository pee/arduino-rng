# This script will read the bytes generated by the Arduino true random number
# generator and mix them into the kernel entropy pool.
#
# http://joethecoolestguyontheinternet.com/
#


# This is the number of bytes we read from the Arduino serial port at a time.
BLOCK_SIZE = 1024

# The TTY device that the Arduino creates upon connection.
TTY_DEVICE = '/dev/ttyACM0'


import atexit, serial, sys


def close_handles(sock):
    sock.close()


verbose = False
if len(sys.argv) == 2:
    if sys.argv[1] == '-v':
        verbose = True
        print 'Verbose mode enabled.  Bytes will be printed before being added to the entropy pool.'
    elif sys.argv[1] == '-h':
        print "Usage: python %s [-v]\n\n\t-v   print random bytes" % sys.argv[0]


# Open a connection to the Arduino.
s = serial.Serial(TTY_DEVICE, 9600, timeout=30)
s.open()
atexit.register(close_handles, s)

# Open a handle to the kernel's entropy pool with buffering disabled.
hEntropyPool = open('/dev/random', 'w', 0)
atexit.register(close_handles, hEntropyPool)
while True:
    str = s.read(BLOCK_SIZE)
    hEntropyPool.write(str)
    if verbose:
        sys.stdout.write(str.encode("hex"))
        sys.stdout.flush()

